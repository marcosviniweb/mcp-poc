{
  "description": "Exemplos de configuração do MCP Server lib-components",
  "examples": {
    "1-single-library": {
      "title": "Uma única biblioteca do node_modules",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": ["<caminho-absoluto>/mcp/build/main.js"],
            "env": {
              "LIB_COMPONENTS_PATHS": "<caminho-do-projeto>/node_modules/@company/ui-lib"
            }
          }
        }
      }
    },
    "2-multiple-libraries-env": {
      "title": "Múltiplas bibliotecas via variável de ambiente (separadas por ;)",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": ["<caminho-absoluto>/mcp/build/main.js"],
            "env": {
              "LIB_COMPONENTS_PATHS": "<caminho-do-projeto>/node_modules/@company/ui-lib;<caminho-do-projeto>/node_modules/@company/forms-lib;<caminho-repos>/custom-lib"
            }
          }
        }
      }
    },
    "3-multiple-libraries-args": {
      "title": "Múltiplas bibliotecas via argumentos CLI",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": [
              "<caminho-absoluto>/mcp/build/main.js",
              "--libs",
              "<caminho-do-projeto>/node_modules/@company/ui-lib",
              "<caminho-do-projeto>/node_modules/@company/forms-lib",
              "<caminho-repos>/custom-lib"
            ]
          }
        }
      }
    },
    "4-workspace-plus-external": {
      "title": "Workspace completo + bibliotecas externas",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": ["<caminho-absoluto>/mcp/build/main.js"],
            "env": {
              "MCP_WORKSPACE_ROOT": "<caminho-workspace-angular>",
              "LIB_COMPONENTS_PATHS": "<caminho-outro-projeto>/node_modules/@external/lib"
            }
          }
        }
      }
    },
    "5-dist-folder": {
      "title": "Biblioteca compilada (pasta dist/)",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": ["<caminho-absoluto>/mcp/build/main.js"],
            "env": {
              "LIB_COMPONENTS_PATHS": "<caminho-libs>/my-lib/dist"
            }
          }
        }
      }
    },
    "6-scoped-packages": {
      "title": "Pacotes com escopo (@scope/package)",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": ["<caminho-absoluto>/mcp/build/main.js"],
            "env": {
              "LIB_COMPONENTS_PATHS": "<caminho-do-projeto>/node_modules/@angular/material;<caminho-do-projeto>/node_modules/@company/design-system"
            }
          }
        }
      }
    },
    "7-mixed-sources": {
      "title": "Fontes mistas: node_modules + repositórios + dist",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": [
              "<caminho-absoluto>/mcp/build/main.js",
              "--libs",
              "<caminho-do-projeto>/node_modules/@company/ui-lib",
              "<caminho-repos>/my-lib-source",
              "<caminho-builds>/another-lib/dist"
            ]
          }
        }
      }
    },
    "8-unix-paths": {
      "title": "Exemplo para Linux/Mac (separador :)",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": ["<caminho-absoluto>/mcp/build/main.js"],
            "env": {
              "LIB_COMPONENTS_PATHS": "<caminho-do-projeto>/node_modules/@company/ui-lib:<caminho-repos>/custom-lib"
            }
          }
        }
      }
    },
    "9-nx-workspace": {
      "title": "Nx Workspace (libs folder)",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": ["<caminho-absoluto>/mcp/build/main.js"],
            "env": {
              "LIB_COMPONENTS_PATHS": "<caminho-nx-workspace>/libs/ui;<caminho-nx-workspace>/libs/data-access"
            }
          }
        }
      }
    },
    "10-monorepo": {
      "title": "Monorepo (packages folder)",
      "config": {
        "mcpServers": {
          "lib-components": {
            "command": "node",
            "args": [
              "<caminho-absoluto>/mcp/build/main.js",
              "--libs",
              "<caminho-monorepo>/packages/lib-a",
              "<caminho-monorepo>/packages/lib-b",
              "<caminho-monorepo>/packages/lib-c"
            ]
          }
        }
      }
    },
    "11-github-copilot": {
      "title": "GitHub Copilot no VS Code",
      "description": "Configure o MCP Server para uso com GitHub Copilot no Visual Studio Code",
      "configurations": {
        "vscode-workspace": {
          "description": "Configuração por repositório (.vscode/mcp.json) - Recomendado para equipes",
          "file": ".vscode/mcp.json",
          "config": {
            "inputs": [],
            "servers": {
              "angular-lib-components": {
                "command": "node",
                "args": [
                  "<caminho-absoluto>/mcp/build/main.js",
                  "--libs",
                  "${workspaceFolder}/node_modules/@company/ui-lib",
                  "${workspaceFolder}/node_modules/@company/forms-lib"
                ]
              }
            }
          }
        },
        "vscode-workspace-env": {
          "description": "Configuração por repositório com variáveis de ambiente (.vscode/mcp.json)",
          "file": ".vscode/mcp.json",
          "config": {
            "inputs": [],
            "servers": {
              "angular-lib-components": {
                "command": "node",
                "args": ["<caminho-absoluto>/mcp/build/main.js"],
                "env": {
                  "LIB_COMPONENTS_PATHS": "${workspaceFolder}/node_modules/@company/ui-lib;${workspaceFolder}/node_modules/@company/forms-lib"
                }
              }
            }
          }
        },
        "vscode-user-settings": {
          "description": "Configuração pessoal (settings.json) - Disponível em todos os workspaces",
          "file": "settings.json",
          "config": {
            "github.copilot.chat.mcp.enabled": true,
            "github.copilot.chat.mcp.servers": {
              "angular-lib-components": {
                "command": "node",
                "args": ["<caminho-absoluto>/mcp/build/main.js"],
                "env": {
                  "LIB_COMPONENTS_PATHS": "<caminho-do-projeto>/node_modules/@company/ui-lib;<caminho-do-projeto>/node_modules/@company/forms-lib"
                }
              }
            }
          }
        }
      },
      "usage": {
        "description": "O Copilot poderá usar as seguintes ferramentas:",
        "tools": [
          "list-components: Listar todos os componentes Angular disponíveis",
          "get-component: Obter detalhes completos de um componente específico",
          "get-library-info: Obter informações da biblioteca (versão, dependências)",
          "find-library-by-name: Buscar biblioteca por nome"
        ],
        "example_prompts": [
          "Mostre-me todos os componentes disponíveis na biblioteca",
          "Como uso o componente ButtonComponent?",
          "Quais são os inputs e outputs do FormFieldComponent?",
          "Qual a versão da biblioteca @company/ui-lib?",
          "Crie um exemplo de uso do componente ReusableIoComponent com todos os inputs",
          "Liste todos os componentes que têm output de eventos"
        ],
        "steps": [
          "1. Adicione a configuração ao arquivo .vscode/mcp.json ou settings.json",
          "2. Se usar .vscode/mcp.json, clique no botão 'Start' que aparecerá no arquivo",
          "3. Abra o Copilot Chat (Ctrl+Alt+I)",
          "4. Selecione 'Agent' no menu do chat",
          "5. Clique no ícone de ferramentas para ver os servidores MCP disponíveis",
          "6. Converse naturalmente com o Copilot sobre os componentes"
        ]
      },
      "notes": [
        "Use apenas uma localização por servidor (ou .vscode/mcp.json ou settings.json)",
        "Use ${workspaceFolder} para caminhos relativos ao workspace",
        "No Windows use ; para separar paths, no Linux/Mac use :",
        "A configuração em .vscode/mcp.json pode ser compartilhada com a equipe via Git",
        "A configuração em settings.json é pessoal e funciona em todos os workspaces"
      ]
    }
  },
  "notes": {
    "separators": {
      "windows": "Use ; (ponto e vírgula) para separar múltiplos paths",
      "unix": "Use : (dois pontos) para separar múltiplos paths"
    },
    "priority": "Ordem de prioridade: args CLI > env var > workspace atual",
    "formats": [
      "Workspace completo (com angular.json ou workspace.json)",
      "Biblioteca específica (com package.json e src/)",
      "Pasta dist/ (biblioteca compilada)",
      "Pasta node_modules/@scope/package"
    ],
    "tips": [
      "Use caminhos absolutos para evitar problemas",
      "O MCP detecta automaticamente o tipo de estrutura",
      "Logs de inicialização mostram as bibliotecas encontradas",
      "Combine workspace root + paths específicos para máxima flexibilidade"
    ]
  }
}

